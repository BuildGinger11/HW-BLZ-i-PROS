16
{"last_modification_time":1651039517,"language":1,"import_file":"c:/users/pc/documents/github/hw-everybot/src/autons.cpp","args_hash":11671443307407055238,"includes":[],"dependencies":[],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,1,2,3,4,5],"uses":[]}],"funcs":[{"id":0,"usr":15887014938847269589,"detailed_name":"void default_constants()","short_name_offset":5,"short_name_size":17,"kind":12,"storage":1,"hover":"","comments":"It's best practice to tune constants when the robot is empty and with heavier game objects, or with lifts up vs down.\r\nIf the objects are light or the cog doesn't change much, then there isn't a concern here.","declarations":[],"spell":"26:6-26:23|-1|1|2","extent":"26:1-34:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":3092900923736983353,"detailed_name":"void one_mogo_constants()","short_name_offset":5,"short_name_size":18,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"36:6-36:24|-1|1|2","extent":"36:1-44:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":17930230807922646598,"detailed_name":"void two_mogo_constants()","short_name_offset":5,"short_name_size":18,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"46:6-46:24|-1|1|2","extent":"46:1-54:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":1930826540239181700,"detailed_name":"void exit_condition_defaults()","short_name_offset":5,"short_name_size":23,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"56:6-56:29|-1|1|2","extent":"56:1-60:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":6949614112101596496,"detailed_name":"void modified_exit_condition()","short_name_offset":5,"short_name_size":23,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"62:6-62:29|-1|1|2","extent":"62:1-66:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":13594237008267448488,"detailed_name":"void testerAuton()","short_name_offset":5,"short_name_size":11,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"70:6-70:17|-1|1|2","extent":"70:1-73:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":3920339443720747292,"detailed_name":"void wingGrab()","short_name_offset":5,"short_name_size":8,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"77:6-77:14|-1|1|2","extent":"77:1-132:2|-1|1|0","bases":[],"derived":[],"vars":[3],"uses":[],"callees":[]},{"id":7,"usr":13655517582214823777,"detailed_name":"void wingTurn()","short_name_offset":5,"short_name_size":8,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"134:6-134:14|-1|1|2","extent":"134:1-184:2|-1|1|0","bases":[],"derived":[],"vars":[4],"uses":[],"callees":[]},{"id":8,"usr":2045790812565948853,"detailed_name":"void wingAWPFull()","short_name_offset":5,"short_name_size":11,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"186:6-186:17|-1|1|2","extent":"186:1-273:2|-1|1|0","bases":[],"derived":[],"vars":[5],"uses":[],"callees":[]},{"id":9,"usr":11916294697706682513,"detailed_name":"void bamboozlerRight()","short_name_offset":5,"short_name_size":15,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"275:6-275:21|-1|1|2","extent":"275:1-288:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":690386924031657847,"detailed_name":"void fullAWPTall()","short_name_offset":5,"short_name_size":11,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"291:6-291:17|-1|1|2","extent":"291:1-449:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":11,"usr":9347475318848598331,"detailed_name":"void TallMogoWing()","short_name_offset":5,"short_name_size":12,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"451:6-451:18|-1|1|2","extent":"451:1-506:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":12,"usr":3711616265159668176,"detailed_name":"void TallMogoClaw()","short_name_offset":5,"short_name_size":12,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"507:6-507:18|-1|1|2","extent":"507:1-555:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":13,"usr":9069021181349282695,"detailed_name":"void rightneut()","short_name_offset":5,"short_name_size":9,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"556:6-556:15|-1|1|2","extent":"556:1-592:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":14,"usr":9967286626504194571,"detailed_name":"void Tallsmallneut()","short_name_offset":5,"short_name_size":13,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"594:6-594:19|-1|1|2","extent":"594:1-614:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":15,"usr":5603619393468975389,"detailed_name":"void tallnuetfake()","short_name_offset":5,"short_name_size":12,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"616:6-616:18|-1|1|2","extent":"616:1-648:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":16,"usr":18029601407618261841,"detailed_name":"void neutRushAndAllyLeft()","short_name_offset":5,"short_name_size":19,"kind":12,"storage":1,"hover":"","comments":"-preWing Collection----------------------------------------------------","declarations":[],"spell":"652:6-652:25|-1|1|2","extent":"652:1-699:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":17,"usr":16817999455410396493,"detailed_name":"void winPointAuton()","short_name_offset":5,"short_name_size":13,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"702:6-702:19|-1|1|2","extent":"702:1-760:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":18,"usr":9386113662243103626,"detailed_name":"void wingAndSwingLeftNeutAndTall()","short_name_offset":5,"short_name_size":27,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"763:6-763:33|-1|1|2","extent":"763:1-798:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":19,"usr":8951765886470382270,"detailed_name":"void scoopEnemyZoneRight()","short_name_offset":5,"short_name_size":19,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"800:6-800:25|-1|1|2","extent":"800:1-843:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":20,"usr":3377018096764829659,"detailed_name":"void noKickStand()","short_name_offset":5,"short_name_size":11,"kind":12,"storage":1,"hover":"","comments":"-preWing Collection----------------------------------------------------","declarations":[],"spell":"847:6-847:17|-1|1|2","extent":"847:1-920:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":21,"usr":16808489751207773439,"detailed_name":"void semiGamerRight()","short_name_offset":5,"short_name_size":14,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"923:6-923:20|-1|1|2","extent":"923:1-980:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":22,"usr":2122264382894130346,"detailed_name":"void semiGamerLeft()","short_name_offset":5,"short_name_size":13,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"982:6-982:19|-1|1|2","extent":"982:1-1059:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":23,"usr":12994912818082889238,"detailed_name":"void skillAuton()","short_name_offset":5,"short_name_size":10,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"1061:6-1061:16|-1|1|2","extent":"1061:1-1084:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":24,"usr":17132583964951518888,"detailed_name":"void blank()","short_name_offset":5,"short_name_size":5,"kind":12,"storage":1,"hover":"","comments":"{\r\n\r\n      // sets all subsystems into ready positions\r\n        set_lift_position(-75, DRIVE_SPEED) ;\r\n        sixlock(false) ;\r\n        claw(false) ;\r\n        // pros::delay(500) ;\r\n\r\n      // grab ally mogo\r\n        // drive backwards\r\n        chassis.set_drive_pid(-6, DRIVE_SPEED) ;\r\n        chassis.wait_drive() ;\r\n        // grab mogo\r\n        claw(true) ;\r\n        pros::delay(500) ;\r\n\r\n      // grab neut mogo\r\n        chassis.set_swing_pid(ez::LEFT_SWING, 100, SWING_SPEED);\r\n        chassis.wait_drive();\r\n\r\n        // lower lift\r\n        set_lift_position(-75, 100) ;\r\n\r\n        // rush\r\n        chassis.set_drive_pid(46, DRIVE_SPEED) ;\r\n\r\n        chassis.wait_until(26) ;\r\n        chassis.set_max_speed(DRIVE_SPEED/1.5) ;\r\n\r\n        chassis.wait_drive() ;\r\n\r\n        //grab\r\n        pros::delay(150) ;\r\n        sixlock(true) ;\r\n        pros::delay(250) ;\r\n\r\n      // pringle sweeper\r\n        // prep lift\r\n        set_lift_position(700, 100) ;\r\n        // reverse into position\r\n        chassis.set_drive_pid(-21, DRIVE_SPEED) ; // was -17\r\n        chassis.wait_drive() ;\r\n\r\n        chassis.set_turn_pid(177, DRIVE_SPEED) ; // was 180\r\n        chassis.wait_drive() ;\r\n\r\n\r\n        // pick up home row rings (10)\r\n        intake(90) ; // <-- turns on intakes for rest of auton\r\n\r\n\r\n        chassis.set_drive_pid(51, DRIVE_SPEED) ; // was 48\r\n        chassis.wait_drive() ;\r\n\r\n      // platform neut\r\n        // // turn off intake\r\n        // intake(0) ;\r\n        // raise lift\r\n        set_lift_position(1700, 100) ;\r\n\r\n        // might not need\r\n        // align with platform\r\n        chassis.set_drive_pid(-13, DRIVE_SPEED) ; // was -10\r\n        chassis.wait_drive() ;\r\n\r\n\r\n        // turn to face\r\n        chassis.set_turn_pid(280, DRIVE_SPEED) ; // was 275\r\n        chassis.wait_drive() ;\r\n        // into the platform\r\n        chassis.set_drive_pid(22, DRIVE_SPEED) ; // was 20\r\n        chassis.wait_drive() ;\r\n        // lower lift\r\n        set_lift_position(1050, 100) ;\r\n        pros::delay(500) ;\r\n        // drop mogo\r\n        sixlock(false) ;\r\n        pros::delay(250) ;\r\n        // back out and raise lift\r\n        set_lift_position(1700, 100) ;\r\n        pros::delay(250) ;\r\n        chassis.set_drive_pid(-15, DRIVE_SPEED) ; // was -10\r\n        chassis.wait_drive() ;\r\n\r\n      // grab and platform tall neut\r\n\r\n        // // align\r\n        // chassis.set_drive_pid(-5, DRIVE_SPEED) ;\r\n        // chassis.wait_drive() ;\r\n\r\n        // face tall neut\r\n        set_lift_position(-75, DRIVE_SPEED) ;\r\n        chassis.set_turn_pid(96, DRIVE_SPEED) ; // was 93\r\n        chassis.wait_drive() ;\r\n        // grab\r\n        chassis.set_drive_pid(19, DRIVE_SPEED/1.75) ; // ws 17 / was DRIVE_SPEED\r\n        chassis.wait_drive() ;\r\n        sixlock(true) ;\r\n        pros::delay(250) ;\r\n        // lift & turn\r\n        set_lift_position(1700, DRIVE_SPEED) ;\r\n        // pros::delay(750) ;\r\n        chassis.set_turn_pid(250, DRIVE_SPEED/2) ; // was 260\r\n        chassis.wait_drive() ;\r\n        // drive forward\r\n        chassis.set_drive_pid(15, DRIVE_SPEED/1.5) ;\r\n        chassis.wait_drive() ;\r\n\r\n      // platform tall neut\r\n        // set_lift_position(1700, DRIVE_SPEED) ;\r\n        // pros::delay(750) ;\r\n        chassis.set_turn_pid(270, DRIVE_SPEED/2) ;\r\n        chassis.wait_drive() ;\r\n        chassis.set_drive_pid(25, DRIVE_SPEED/1.5) ; // was 32\r\n        chassis.wait_drive() ;\r\n        // lower\r\n        set_lift_position(1100, 100) ;\r\n        pros::delay(1000) ;\r\n        //drop\r\n        sixlock(false) ;\r\n        pros::delay(500) ;\r\n        // back out\r\n        set_lift_position(1700, 100) ;\r\n        chassis.set_drive_pid(-5, DRIVE_SPEED) ;\r\n        chassis.wait_drive() ;\r\n\r\n      // grab ally\r\n        // face\r\n        chassis.set_turn_pid(180, DRIVE_SPEED) ; // was 178\r\n        chassis.wait_drive () ;\r\n\r\n\r\n        // prep lift & intake\r\n        set_lift_position(-75, 100) ;\r\n\r\n        // drive to ally\r\n        chassis.set_drive_pid(70, DRIVE_SPEED/1.2) ; // was 50 ;was DRIVE_SPEED\r\n        //chassis.wait_drive() ;\r\n\r\n        pros::delay(3000) ;\r\n\r\n        // grab\r\n        sixlock(true) ;\r\n        pros::delay(250) ;\r\n\r\n      // pringles and traveling to other side\r\n        set_lift_position(400, 100) ;\r\n        // chassis.set_drive_pid(-5, DRIVE_SPEED) ;\r\n        // chassis.wait_drive() ;\r\n\r\n// skipped---------------------------\r\n/*\r\ncant be:\r\nbuild (tested driver)\r\ncode (dry runs are fine)\r\nhardware fine dry rns and driver\r\n\r\n*/\r\n        chassis.set_turn_pid(90, DRIVE_SPEED) ;\r\n        chassis.wait_drive() ;\r\n        // intake(80) ;\r\n        // pringle pick up + drive to other side\r\n\r\n        chassis.set_drive_pid(62, DRIVE_SPEED/1.2) ; // was 62, was DRIVE_SPEED\r\n        chassis.wait_drive() ;\r\n\r\n// -----------------------------------------\r\n\r\n      // ring intake + plat ally goals\r\n        chassis.set_turn_pid(0, DRIVE_SPEED) ;\r\n        chassis.wait_drive() ;\r\n\r\n        set_lift_position(1700, 50) ;\r\n\r\n        //align in front of platform\r\n        chassis.set_drive_pid(59, DRIVE_SPEED/1.4) ; // was 57, was DRIVE_SPEED\r\n        chassis.wait_drive() ;\r\n\r\n        // face platform\r\n        chassis.set_turn_pid(90, DRIVE_SPEED) ; // was -270\r\n        chassis.wait_drive() ;\r\n\r\n        // plat ally1\r\n        chassis.set_drive_pid(22, DRIVE_SPEED) ; // was 16\r\n        chassis.wait_drive() ;\r\n\r\n        set_lift_position(1100, DRIVE_SPEED) ;\r\n        pros::delay(250) ;\r\n        sixlock(false) ;\r\n        pros::delay(250) ;\r\n\r\n        // get out\r\n        set_lift_position(1700, 100) ;\r\n        chassis.set_drive_pid(-20, DRIVE_SPEED) ;\r\n        chassis.wait_drive() ;\r\n\r\n      // plat ally2\r\n        // drop goal and lower lift\r\n        set_lift_position(0, 100) ;\r\n        claw(false) ;\r\n        chassis.set_drive_pid(12, DRIVE_SPEED) ; // was 11\r\n        chassis.wait_drive() ;\r\n\r\n        // turn around\r\n        chassis.set_turn_pid(-90, DRIVE_SPEED) ;\r\n        chassis.wait_drive() ;\r\n        // drive into\r\n        chassis.set_drive_pid(15, DRIVE_SPEED) ; // was 12\r\n        chassis.wait_drive() ;\r\n        sixlock(true) ;\r\n        pros::delay(250) ;\r\n\r\n        set_lift_position(1700, 100) ;\r\n        // face plat\r\n        chassis.set_turn_pid(110, TURN_SPEED) ; // was DRIVE_SPEED\r\n        chassis.wait_drive() ;\r\n        // drive into - problem line\r\n        chassis.set_drive_pid(26, DRIVE_SPEED) ; // was 25\r\n        pros::delay(1000) ;\r\n        // lower and plat\r\n        set_lift_position(1100, 100) ;\r\n        pros::delay(500) ;\r\n        sixlock(false) ;\r\n\r\n        // escape\r\n        set_lift_position(1700, 100) ;\r\n        chassis.set_drive_pid(-10, DRIVE_SPEED) ;\r\n        chassis.wait_drive() ;\r\n\r\n      // grab + plat neut\r\n        // face\r\n        chassis.set_turn_pid(220, DRIVE_SPEED) ; // was 222\r\n        chassis.wait_drive() ;\r\n\r\n        // lower lift\r\n        set_lift_position(0, 127) ;\r\n        //set_lift_position(300, 127) ;\r\n        chassis.set_drive_pid(50, DRIVE_SPEED) ; // was 42\r\n        chassis.wait_until(27) ; // was 25\r\n        chassis.set_max_speed(DRIVE_SPEED/1.5) ;\r\n        chassis.wait_drive() ;\r\n\r\n        // pick up neut\r\n        sixlock(true) ;\r\n        pros::delay(250) ;\r\n\r\n        // turn + go back to plat\r\n        set_lift_position(1500, 100) ;\r\n        chassis.set_turn_pid(53, DRIVE_SPEED) ; // was 55\r\n        chassis.wait_drive() ;\r\n\r\n        // drive to plat\r\n        chassis.set_drive_pid(59, DRIVE_SPEED) ; // was 59\r\n        chassis.wait_drive() ;\r\n        // // face plat\r\n        // chassis.set_turn_pid(87, DRIVE_SPEED) ; // was 90\r\n        // chassis.wait_drive() ;\r\n        // // drive in\r\n        // chassis.set_drive_pid(10, DRIVE_SPEED) ; // was 10\r\n        // chassis.wait_drive() ;\r\n\r\n        set_lift_position(1100, 100) ;\r\n        pros::delay(500) ;\r\n        sixlock(false) ;\r\n        pros::delay(250) ;\r\n\r\n        // escape\r\n        set_lift_position(1700, 100) ;\r\n        chassis.set_drive_pid(-6, DRIVE_SPEED) ; // was -7 , -5\r\n        chassis.wait_drive() ;\r\n      // grab ally goal\r\n        chassis.set_turn_pid(0, DRIVE_SPEED) ;\r\n        chassis.wait_drive() ;\r\n\r\n        set_lift_position(0, 100) ; // was 100\r\n        // pros::delay(500) ;\r\n\r\n        // into the wall\r\n        chassis.set_drive_pid(69, DRIVE_SPEED/1.2) ; // was 69\r\n\r\n        // chassis.wait_until(30) ;\r\n        // set_lift_position(0, 100) ;\r\n\r\n        pros::delay(3000); // was 3000\r\n\r\n\r\n        sixlock(true) ;\r\n        pros::delay(250) ;\r\n\r\n      // speed run plat\r\n        chassis.set_turn_pid(-117, DRIVE_SPEED) ; // was -115\r\n        chassis.wait_drive() ;\r\n\r\n        set_lift_position(1400, 100) ;\r\n        chassis.set_drive_pid(105, DRIVE_SPEED) ;\r\n        chassis.wait_drive() ;\r\n\r\n        // drop\r\n        sixlock(false) ;\r\n        pros::delay(250) ;\r\n\r\n        chassis.set_drive_pid(-20, DRIVE_SPEED) ;\r\n\r\n}","declarations":[],"spell":"1390:6-1390:11|-1|1|2","extent":"1390:1-1391:3|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":2558318268306489012,"detailed_name":"const int DRIVE_SPEED","short_name_offset":10,"short_name_size":11,"hover":"const int DRIVE_SPEED = 110","comments":"This is 110/127 (around 87% of max speed).  We don't suggest making this 127.\r\nIf this is 127 and the robot tries to heading correct, it's only correcting by\r\nmaking one side slower.  When this is 87%, it's correcting by making one side\r\nfaster and one side slower, giving better heading correction.","declarations":[],"spell":"10:11-10:22|-1|1|2","extent":"10:1-10:28|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":1,"usr":9241921647240433439,"detailed_name":"const int TURN_SPEED","short_name_offset":10,"short_name_size":10,"hover":"const int TURN_SPEED  = 90","comments":"","declarations":[],"spell":"14:11-14:21|-1|1|2","extent":"14:1-14:27|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":2,"usr":16972884801773210566,"detailed_name":"const int SWING_SPEED","short_name_offset":10,"short_name_size":11,"hover":"const int SWING_SPEED = 90","comments":"","declarations":[],"spell":"15:11-15:22|-1|1|2","extent":"15:1-15:27|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":3,"usr":5856475844834967843,"detailed_name":"int timer","short_name_offset":4,"short_name_size":5,"hover":"int timer = 0","comments":"","declarations":[],"spell":"93:9-93:14|6|3|2","extent":"93:5-93:18|6|3|0","type":0,"uses":[],"kind":13,"storage":1},{"id":4,"usr":12437402628386247933,"detailed_name":"int timer","short_name_offset":4,"short_name_size":5,"hover":"int timer = 0","comments":"","declarations":[],"spell":"150:9-150:14|7|3|2","extent":"150:5-150:18|7|3|0","type":0,"uses":[],"kind":13,"storage":1},{"id":5,"usr":3392334855702221796,"detailed_name":"int timer","short_name_offset":4,"short_name_size":5,"hover":"int timer = 0","comments":"","declarations":[],"spell":"202:9-202:14|8|3|2","extent":"202:5-202:18|8|3|0","type":0,"uses":[],"kind":13,"storage":1}]}